'use strict';

var restrictedGlobals = require('confusing-browser-globals');

module.exports = {
    root: true,
    env: {
        browser: true,
        es6: true,
        jest: true,
        node: true,
    },
    extends: ['prettier', 'plugin:@typescript-eslint/eslint-recommended', 'plugin:@typescript-eslint/recommended'],
    parser: 'babel-eslint',
    parserOptions: {
        ecmaVersion: 2018,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true,
        },
    },
    plugins: ['import', 'sort-destructure-keys'],
    rules: {
        'array-callback-return': ['error'],
        'arrow-body-style': ['off'],
        'arrow-parens': ['off'],
        'comma-dangle': [
            'error',
            {
                arrays: 'always-multiline',
                exports: 'always-multiline',
                functions: 'never',
                imports: 'always-multiline',
                objects: 'always-multiline',
            },
        ],
        'consistent-return': ['off'],
        curly: ['error', 'all'],
        'default-case': ['error'],
        'dot-location': ['error', 'property'],
        eqeqeq: ['error', 'smart'],
        'getter-return': ['error'],
        'global-require': ['off'],
        indent: ['off'],
        'linebreak-style': ['off'],
        'max-len': [
            'error',
            120,
            {
                ignoreComments: true,
                ignoreRegExpLiterals: true,
                ignoreStrings: true,
                ignoreTemplateLiterals: true,
                ignoreTrailingComments: true,
                ignoreUrls: true,
            },
        ],
        'new-parens': ['error'],
        'no-array-constructor': ['error'],
        'no-caller': ['error'],
        'no-case-declarations': ['off'],
        'no-cond-assign': ['error', 'except-parens'],
        'no-console': ['off'],
        'no-const-assign': ['error'],
        'no-control-regex': ['error'],
        'no-delete-var': ['error'],
        'no-dupe-args': ['error'],
        'no-dupe-class-members': ['error'],
        'no-dupe-keys': ['error'],
        'no-duplicate-case': ['error'],
        'no-duplicate-imports': ['error'],
        'no-empty-character-class': ['error'],
        'no-empty-pattern': ['error'],
        'no-eval': ['error'],
        'no-ex-assign': ['error'],
        'no-extend-native': ['error'],
        'no-extra-bind': ['error'],
        'no-extra-boolean-cast': ['off'],
        'no-extra-label': ['error'],
        'no-fallthrough': ['error'],
        'no-func-assign': ['error'],
        'no-implied-eval': ['error'],
        'no-invalid-regexp': ['error'],
        'no-iterator': ['error'],
        'no-label-var': ['error'],
        'no-labels': ['error', { allowLoop: true, allowSwitch: false }],
        'no-lone-blocks': ['error'],
        'no-loop-func': ['error'],
        'no-mixed-operators': [
            'off',
            {
                groups: [
                    ['&', '|', '^', '~', '<<', '>>', '>>>'],
                    ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
                    ['&&', '||'],
                    ['in', 'instanceof'],
                ],
                allowSamePrecedence: false,
            },
        ],
        'no-multi-str': ['error'],
        'no-multiple-empty-lines': ['error', { max: 1 }],
        'no-native-reassign': ['error'],
        'no-negated-in-lhs': ['error'],
        'no-new-func': ['error'],
        'no-new-object': ['error'],
        'no-new-symbol': ['error'],
        'no-new-wrappers': ['error'],
        'no-obj-calls': ['error'],
        'no-octal': ['error'],
        'no-octal-escape': ['error'],
        'no-param-reassign': ['off'],
        'no-redeclare': ['error'],
        'no-regex-spaces': ['error'],
        'no-script-url': ['error'],
        'no-self-assign': ['error'],
        'no-self-compare': ['error'],
        'no-sequences': ['error'],
        'no-shadow-restricted-names': ['error'],
        'no-sparse-arrays': ['error'],
        'no-template-curly-in-string': ['error'],
        'no-this-before-super': ['error'],
        'no-throw-literal': ['error'],
        'no-undef': ['error'],
        'no-restricted-globals': ['error'].concat(restrictedGlobals),
        'no-restricted-syntax': ['off'],
        'no-return-assign': ['off'],
        'no-underscore-dangle': ['off'],
        'no-unexpected-multiline': ['error'],
        'no-unreachable': ['error'],
        'no-unused-expressions': [
            'off',
            {
                allowShortCircuit: true,
                allowTernary: true,
                allowTaggedTemplates: true,
            },
        ],
        'no-unused-labels': ['error'],
        'no-unused-vars': [
            'error',
            {
                args: 'none',
                ignoreRestSiblings: true,
            },
        ],
        'no-use-before-define': [
            'error',
            {
                functions: false,
                classes: false,
                variables: false,
            },
        ],
        'no-useless-computed-key': ['error'],
        'no-useless-concat': ['error'],
        'no-useless-constructor': ['error'],
        'no-useless-escape': ['error'],
        'no-useless-rename': [
            'error',
            {
                ignoreDestructuring: false,
                ignoreImport: false,
                ignoreExport: false,
            },
        ],
        'no-with': ['error'],
        'no-whitespace-before-property': ['error'],
        'operator-assignment': ['off'],
        'require-yield': ['error'],
        'rest-spread-spacing': ['error', 'never'],
        semi: ['error'],
        'sort-destructure-keys/sort-destructure-keys': ['error', { caseSensitive: false }],
        'sort-imports': [
            'error',
            {
                ignoreCase: true,
                ignoreMemberSort: false,
                memberSyntaxSortOrder: ['all', 'multiple', 'single', 'none'],
            },
        ],
        'sort-keys': ['error', 'asc', { caseSensitive: false, natural: false }],
        'sort-vars': [
            'error',
            {
                ignoreCase: true,
            },
        ],
        strict: ['error', 'never'],
        'unicode-bom': ['error', 'never'],
        'use-isnan': ['error'],
        'valid-typeof': ['error'],

        'import/no-amd': ['error'],
        'import/no-extraneous-dependencies': ['error'],
        'import/no-webpack-loader-syntax': ['error'],
    },
    settings: {
        react: {
            version: 'detect',
        },
    },
};
